<Window x:Class="PhotoTimingGui.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:PhotoTimingGui.ViewModels"
        xmlns:conv="clr-namespace:PhotoTimingGui.Converters"
        xmlns:enums="clr-namespace:PhotoTimingDjaus.Enums;assembly=VideoEnums"
        Title="Image Viewer">
    <Window.Resources>
        <local:EnumToBooleanConverter x:Key="EnumConverter"/>
        <BooleanToVisibilityConverter x:Key="BoolToVis" />
        <conv:HalfValueConverter x:Key="HalfValueConverter"/>
        <Style TargetType="Menu">
                <Setter Property="Background" Value="LightGray"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Padding" Value="0"/>
            </Style>

            <Style TargetType="MenuItem">
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Padding" Value="10,5"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="DarkGray"/>
                        <Setter Property="Foreground" Value="White"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Window.Resources>
        <Window.DataContext>
        <local:MyViewModel/>
    </Window.DataContext>

    <Grid>
        <!-- Grid Layout with Two Sections -->
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" MinHeight="159" />
            <!-- Controls at the top -->
            <RowDefinition />
            <!-- Expanding Image Viewer -->
        </Grid.RowDefinitions>

        <!-- Zoom and Pan Controls -->
        <StackPanel Orientation="Vertical" Margin="10,10,10,10" Grid.Row="0" Visibility="{Binding MyVisibility}">
            <Grid ShowGridLines="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />

                </Grid.RowDefinitions>

                <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2">
                    <Menu >
                        <MenuItem Header="File"
                            FontWeight="Bold" 
                            FontStyle="Italic"
                            Foreground="Blue">
                            <MenuItem Header="Select Video File" Click="OpenMp4File_Click"/>
                            <MenuItem Header="Load Image File" Click="OpenPngFile_Click"/>
                            <MenuItem Header="Set Temp Gun Audio File" Click="OpenGunAudioTextFile_Click"/>
                            <Separator/>
                            <MenuItem Header="Save State" Click="SaveViewModel_Click"/>
                            <Separator/>
                            <MenuItem Header="Exit" Command="ApplicationCommands.Close"/>
                        </MenuItem>
                    </Menu>
                    <Menu >
                        <MenuItem Header="Gun Time Line Color" 
                            FontWeight="Bold" 
                            FontStyle="Italic"
                            Foreground="{Binding SelectedColorName}" > <!--Background="{Binding SelectedColorBackgroundName}" -->
                            <MenuItem Header="Red" Command="{Binding SetColorCommand}" CommandParameter="Red">
                                <MenuItem.Icon>
                                    <CheckBox IsChecked="{Binding IsRedSelected, Mode=OneWay}" IsHitTestVisible="False" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="Green" Command="{Binding SetColorCommand}" CommandParameter="Green">
                                <MenuItem.Icon>
                                    <CheckBox IsChecked="{Binding IsGreenSelected, Mode=OneWay}" IsHitTestVisible="False" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="Blue" Command="{Binding SetColorCommand}" CommandParameter="Blue">
                                <MenuItem.Icon>
                                    <CheckBox IsChecked="{Binding IsBlueSelected, Mode=OneWay}" IsHitTestVisible="False" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="Yellow" Command="{Binding SetColorCommand}" CommandParameter="Yellow">
                                <MenuItem.Icon>
                                    <CheckBox IsChecked="{Binding IsYellowSelected, Mode=OneWay}" IsHitTestVisible="False" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="Cyan" Command="{Binding SetColorCommand}" CommandParameter="Cyan">
                                <MenuItem.Icon>
                                    <CheckBox IsChecked="{Binding IsCyanSelected, Mode=OneWay}" IsHitTestVisible="False" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="Magenta" Command="{Binding SetColorCommand}" CommandParameter="Magenta">
                                <MenuItem.Icon>
                                    <CheckBox IsChecked="{Binding IsMagentaSelected, Mode=OneWay}" IsHitTestVisible="False" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="White" Command="{Binding SetColorCommand}" CommandParameter="White">
                                <MenuItem.Icon>
                                    <CheckBox IsChecked="{Binding IsWhiteSelected, Mode=OneWay}" IsHitTestVisible="False" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="Black" Command="{Binding SetColorCommand}" CommandParameter="Black">
                                <MenuItem.Icon>
                                    <CheckBox IsChecked="{Binding IsBlackSelected, Mode=OneWay}" IsHitTestVisible="False" />
                                </MenuItem.Icon>
                            </MenuItem>
                        </MenuItem>
                    </Menu>
                    <Menu Visibility="{Binding MyVisibility}">
                        <MenuItem Header="Time From Mode:" 
                              FontWeight="Bold" 
                              FontStyle="Italic"
                              Foreground="Blue">
                            <!-- Option 1: Button -->
                            <MenuItem Header="Button" 
                  Click="TimeFromMode_Click"
                  Tag="{x:Static enums:TimeFromMode.FromButtonPress}" />
                            <!-- Option 2: Mic -->
                            <MenuItem Header="Mic" 
                  Click="TimeFromMode_Click"
                  Tag="{x:Static enums:TimeFromMode.FromGunviaAudio}" />
                            <!-- Option 3: Flash - with a side (sub) menu -->
                            <MenuItem Header="Flash" 
                  Click="TimeFromMode_Click"
                  Tag="{x:Static enums:TimeFromMode.FromGunViaVideo}">
                                <!-- Submenu Header (non-selectable) -->
                                <MenuItem Header="Detect Flash:" 
                                      IsEnabled="False" 
                                      FontWeight="Bold"
                                      FontStyle="Italic"
                                      Foreground="Purple"/>
                                <!-- Flash detection option 1 -->
                                <MenuItem Header="From Brightness Flash"
                      Click="VideoDetectMode_Click"
                      Tag="{x:Static enums:VideoDetectMode.FromFlash}" />
                                <!-- Flash detection option 2 -->
                                <!-- MenuItem Header="Detect Frame Change"  ERRANT
                      Click="VideoDetectMode_Click"
                      Tag="{x:Static enums:VideoDetectMode.FromFrameChange}" / -->
                            </MenuItem>
                            <!-- Option 4: Manual -->
                            <MenuItem Header="Manual" 
                  Click="TimeFromMode_Click"
                  Tag="{x:Static enums:TimeFromMode.ManuallySelect}" />
                        </MenuItem>
                    </Menu>
                </StackPanel>


                <!-- File Paths -->
                <TextBlock Grid.Row="1" Grid.Column="0"    Text="Video Path:" TextAlignment="Right"  />
                <TextBox Grid.Row="1" Grid.Column="1"  Name="VideoPathInput" HorizontalAlignment="Left"  Margin="10,0,0,0" Width="180"  Text= "{Binding VideoPathInput, UpdateSourceTrigger=PropertyChanged}" />
                <TextBlock Grid.Row="2" Grid.Column="0"  Text="Output Path:" TextAlignment="Right"  />
                <TextBox Grid.Row="2" Grid.Column="1"  Name="OutputPathInput" HorizontalAlignment="Left"  Margin="10,0,0,0"  Width="180"  Text="{Binding OutputPathInput, UpdateSourceTrigger=PropertyChanged}"   />
                <TextBlock Grid.Row="3" Grid.Column="0"  Text="Gun Audio File Path:" TextAlignment="Right" />
                <TextBox Grid.Row="3" Grid.Column="1"  x:Name="GunAudioPathInput" HorizontalAlignment="Left" Margin="10,0,0,0" Width="180"   Text= "{Binding GunAudioPathInput, UpdateSourceTrigger=PropertyChanged}"  />

                <!-- Zoom and Pan Sliders -->
                <!-- Horizontal -->
                <TextBlock Grid.Column="2" Grid.Row="0" Text="Horizontal Zoom:" TextAlignment="Right"    />
                <Slider Grid.Column="3" Grid.Row="0" Name="HorizontalZoomSlider" HorizontalAlignment="Left" Minimum="0.5" Maximum="3" Value="1" Width="150"   ValueChanged="HorizontalZoomSlider_ValueChanged" Grid.RowSpan="2" />
                <TextBlock Grid.Column="2" Grid.Row="1" Text="Horizontal Pan:" TextAlignment="Right"    />
                <Slider Grid.Column="3" Grid.Row="1" Name="HorizontalPanSlider" HorizontalAlignment="Left" Minimum="0" Maximum="1" Value="0.5" Width="150"   ValueChanged="HorizontalPanSlider_ValueChanged" />
                <!-- Vertical -->
                <TextBlock Grid.Column="2" Grid.Row="2" Text="Vertical Zoom:" TextAlignment="Right"   />
                <Slider Grid.Column="3" Grid.Row="2" Name="VerticalZoomSlider" HorizontalAlignment="Left"  Minimum="0.5" Maximum="3" Value="1" Width="150"   ValueChanged="VerticalZoomSlider_ValueChanged" Grid.RowSpan="2" />
                <TextBlock Grid.Column="2" Grid.Row="3" Text="Vertical Pan:" TextAlignment="Right"   />
                <Slider Grid.Column="3" Grid.Row="3" Name="VerticalPanSlider" HorizontalAlignment="Left"  Minimum="0" Maximum="1" Value="0.5" Width="150"   ValueChanged="VerticalPanSlider_ValueChanged" />

    
                <!-- ButtonsEtc. -->
                <Button Grid.Row="6" Grid.Column="0" Grid.RowSpan="2" Name="StitchButton" VerticalAlignment="Center" HorizontalAlignment="Center"  Content="Stitch Video" Height="50" Width="200" Click="StitchButton_Click"  Visibility="{Binding MyVisibility}" 
                        Foreground="Green" FontWeight="Bold" Background="LightPink"/>
                <Button Grid.Row="6" Grid.Column="1" Name="WriteGunLine" 
                        Click="WriteGunLineButton_Click"
                        HorizontalAlignment="Center" VerticalAlignment="Top"
                        Content="Accept Gun Line" 
                        Width="150"  Height="20"                                                                                    
                        FontWeight="Bold"
                        Foreground="{Binding SelectedColorName}">
                        <Button.Style>
                            <Style TargetType="Button">
                                <!-- Default state -->
                                <Setter Property="Visibility" Value="Collapsed"/>

                                <!-- Make it Visible only when TimeFromMode == ManuallySelect -->
                                <!-- Style.Triggers>
                                    <DataTrigger Binding="{Binding TimeFromMode}"
                                        Value="{x:Static enums:TimeFromMode.ManuallySelect}">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers -->
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding TimeFromMode}" 
                                                Value="{x:Static enums:TimeFromMode.ManuallySelect}" />
                                            <Condition Binding="{Binding HasStitched}" Value="True" />
                                            <Condition Binding="{Binding HaveSelectedandShownGunLineToManualMode}" Value="False" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                <StackPanel Grid.Row="7" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <!-- Default: hide the panel -->
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding TimeFromMode}" 
                                   Value="{x:Static enums:TimeFromMode.ManuallySelect}" />
                                        <Condition Binding="{Binding HasStitched}" 
                                   Value="True" />
                                        <Condition Binding="{Binding HaveSelectedandShownGunLineToManualMode}" 
                                   Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Visibility" Value="Visible"/>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>

                    <!-- The rest of your StackPanel content goes here -->
               
                <!-- Left Button (Back icon) -->
                    <Button ToolTip="Back" Click="NudgeButton_Click">
                        <Button.Content>
                            <TextBlock Text="&#xE72B;" 
                       FontFamily="Segoe MDL2 Assets" 
                       FontSize="24" 
                       FontWeight="Bold"
                       Foreground="{Binding SelectedColorName}"
                       VerticalAlignment="Center" 
                       HorizontalAlignment="Center"/>
                        </Button.Content>
                    </Button>

                    <TextBlock Text=" Nudge Gun Line " 
                        FontWeight="Bold"
                        Foreground="{Binding SelectedColorName}"
                        Height="28"
                        Margin="0"
                        Background="LightGray"
                        TextAlignment="Center"
                        VerticalAlignment="Center"/>

                    <!-- Right Button (Forward icon) -->
                    <Button ToolTip="Forward" Click="NudgeButton_Click">
                        <Button.Content>
                            <TextBlock Text="&#xE72A;" 
                       FontFamily="Segoe MDL2 Assets" 
                       FontSize="24" 
                       FontWeight="Bold"
                       Foreground="{Binding SelectedColorName}"
                       VerticalAlignment="Center" 
                       HorizontalAlignment="Center"/>
                        </Button.Content>
                    </Button>
                </StackPanel>

                <!-- Button Grid.Row="6" Grid.Column="0" Name="LoadImageButton" HorizontalAlignment="Left" Content="Load Image" Width="150" Click="LoadImageButton_Click" Height="20" VerticalAlignment="Top" / -->
                <!-- Button Grid.Row="7" Grid.Column="0" x:Name="FlashButton" HorizontalAlignment="Left"  Content="Detect Flash in Video" Width="150" Click="FlashButton_Click" VerticalAlignment="Center" Visibility="{Binding MyVisibility}"/ -->
                <CheckBox Grid.Row="9" Grid.Column="2" VerticalAlignment="Center"  Name="AutoScaleCheckbox" HorizontalAlignment="Center"  Content="Auto Scale to Height" Checked="AutoScaleCheckbox_Checked" Unchecked="AutoScaleCheckbox_Unchecked"/>


                <!-- Output Data -->
                <TextBlock Grid.Column="2" Grid.Row="4" Name="StartTimeInputLabel"            TextAlignment="Right" Text="Start Time (Seconds): "  />
                <TextBox Grid.Column="3"   Grid.Row="4" Name="StartTimeInput"                 HorizontalAlignment="Left"  Width="150"  IsReadOnly="True"  Text="{Binding StartTimeInput}"  />
                <TextBlock Grid.Column="2" Grid.Row="5" Name="VideoLengthLabel"               TextAlignment="Right" Text="Video Length:" Visibility="{Binding MyVisibility}"   />
                <TextBox Grid.Column="3"   Grid.Row="5" Name="VideoLength" IsReadOnly="True"  HorizontalAlignment="Left" Width="150"  VerticalAlignment="Center" Text="{Binding VideoLength}" Visibility="{Binding MyVisibility}"  />
                <TextBlock Grid.Column="2" Grid.Row="6" Name="GunTimeLabel"                   TextAlignment="Right" Text="Gun Time: "   Visibility="{Binding MyVisibility}"  />
                <TextBox Grid.Column="3"   Grid.Row="6" Name="GunTime" IsReadOnly="True"      HorizontalAlignment="Left" Width="150"  Text="{Binding GunTime}"   Visibility="{Binding MyVisibility}" />
                <TextBlock Grid.Column="2" Grid.Row="7" Name="ThresholdLabel"                 TextAlignment="Right" Text="Audio Max /Threshold: "   Visibility="{Binding MyVisibility}"  />
                <TextBox Grid.Column="3"   Grid.Row="7" Name="Threshold" IsReadOnly="False"   HorizontalAlignment="Left"  Width="150" Text="1000"  Visibility="{Binding MyVisibility}" />
                <TextBlock Grid.Column="2" Grid.Row="8" Name="FinishTimeLabel"                TextAlignment="Right" Text="Finish Time: " FontWeight="Bold" Foreground="Blue"   Visibility="{Binding MyVisibility}"  />
                <TextBox Grid.Column="3"   Grid.Row="8" Name="FinishTime" IsReadOnly="True"   HorizontalAlignment="Left" Width="150"  Foreground="Purple" VerticalAlignment="Center" Text="" Visibility="{Binding MyVisibility}"  />


                <!-- Sliders -->
                <TextBlock Grid.Column="0" Grid.Row="8" Text="Axis Height: " HorizontalAlignment="Right" />
                <StackPanel Orientation="Horizontal" Grid.Row="8" Grid.Column="1">
                    <Slider Name="AxisHeightSlider" HorizontalAlignment="Left"  Minimum="0" Maximum="100" Value="100" TickFrequency="10" IsSnapToTickEnabled="True" Width="150"  ValueChanged="VerticalZoomSlider_ValueChanged" />
                    <TextBlock Text="{Binding ElementName=AxisHeightSlider, Path=Value, Mode=OneWay}"  TextAlignment="Right" Width="50"  />
                </StackPanel>
                <TextBlock Grid.Column="0" Grid.Row="9" Text="Audio Height: " HorizontalAlignment="Right"  Grid.RowSpan="2"  />
                <StackPanel Orientation="Horizontal" Grid.Row="9" Grid.Column="1">
                    <Slider  Name="AudioHeightSlider" HorizontalAlignment="Left"  Minimum="0" Maximum="100" Value="100" TickFrequency="10" IsSnapToTickEnabled="True" Width="150"   ValueChanged="VerticalPanSlider_ValueChanged"  />
                    <TextBlock  Text="{Binding ElementName=AudioHeightSlider, Path=Value, Mode=OneWay}"  TextAlignment="Right" Width="50" />
                </StackPanel>

                <Label Grid.Row="4" Grid.Column="0"  Content="Time From Mode: " FontWeight="Bold" FontStyle="Italic" Foreground="Blue"  HorizontalAlignment="Right" />
                <Label Grid.Row="5" Grid.Column="0"  Content="Detect Flash: " FontWeight="Bold" FontStyle="Italic" Foreground="Blue" HorizontalAlignment="Right" />
                <Label Grid.Row="4" Grid.Column="1"  Content="{Binding TimeFromMode}" FontWeight="Bold"  Foreground="Purple"  HorizontalAlignment="Left" />
                <StackPanel Grid.Row="5"
                    Grid.Column="1"
                    Visibility="{Binding FlashSelected,
                    Converter={StaticResource BoolToVis}}">

                    <Label Content="{Binding VideoDetectMode}"
                       FontWeight="Bold"
                       Foreground="Purple"
                       HorizontalAlignment="Left">      
                        <Label.Style>
                            <Style TargetType="Label">
                                <!-- Default state -->
                                <Setter Property="Visibility" Value="Collapsed"/>

                                <!-- Make it Visible only when TimeFromMode == FromGunViaVideo -->
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding TimeFromMode}"
                                 Value="{x:Static enums:TimeFromMode.FromGunViaVideo}">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>
                </StackPanel>



                <!-- Start Detect Mode RadioButtons
                <StackPanel Orientation="Horizontal" Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" Visibility="{Binding MyVisibility}"  >
                    <Label Content="Time From Mode: " FontWeight="Bold" FontStyle="Italic" Foreground="Blue" VerticalContentAlignment="Center" VerticalAlignment="Bottom" HorizontalAlignment="Center" />
                    <RadioButton Content=" Button " VerticalContentAlignment="Center"
                 IsChecked="{Binding TimeFromMode, Converter={StaticResource EnumConverter}, ConverterParameter={x:Static enums:TimeFromMode.FromButtonPress}}" Checked="RadioButton_Checked" />
                    <RadioButton Content=" Mic " VerticalContentAlignment="Center" 
                 IsChecked="{Binding TimeFromMode, Converter={StaticResource EnumConverter}, ConverterParameter={x:Static enums:TimeFromMode.FromGunviaAudio}}" Checked="RadioButton_Checked" />
                    <RadioButton Content=" Flash " VerticalContentAlignment="Center"
                 IsChecked="{Binding TimeFromMode, Converter={StaticResource EnumConverter}, ConverterParameter={x:Static enums:TimeFromMode.FromGunViaVideo}}" Checked="RadioButton_Checked" />
                    <RadioButton Content=" Manual " VerticalContentAlignment="Center"
                 IsChecked="{Binding TimeFromMode, Converter={StaticResource EnumConverter}, ConverterParameter={x:Static enums:TimeFromMode.ManuallySelect}}" Checked="RadioButton_Checked" />
                </StackPanel>
                -->

                <!-- Flash Detect RadioButtons
                <StackPanel Orientation="Horizontal" Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="2" Visibility="{Binding MyVisibility}"   >
                    <Label Content="Detect Flash: " FontWeight="Bold" FontStyle="Italic" Foreground="Blue" HorizontalAlignment="Center" />
                    <RadioButton Content="From Brightness Flash  " VerticalContentAlignment="Center"
                 IsChecked="{Binding VideoDetectMode, Converter={StaticResource EnumConverter}, ConverterParameter={x:Static enums:VideoDetectMode.FromFlash}}" Checked="RadioButton_Checked" />
                     RadioButton Content="Detect Motion  " VerticalContentAlignment="Center" 
                 IsChecked="{Binding VideoDetectMode, Converter={StaticResource EnumConverter}, ConverterParameter={x:Static enums:VideoDetectMode.FromFrameChange}}" Checked="RadioButton_Checked" / 
                    <RadioButton Content="Detect Frame Change " VerticalContentAlignment="Center"
                 IsChecked="{Binding VideoDetectMode, Converter={StaticResource EnumConverter}, ConverterParameter={x:Static enums:VideoDetectMode.FromMotionDetector}}" Checked="RadioButton_Checked" />
                </StackPanel>
                -->



    </Grid>
        </StackPanel>
        <ProgressBar  Name="BusyIndicator" Height="20" Width="150" IsIndeterminate="True" Visibility="Collapsed" Margin="10,0,0,0" VerticalAlignment="Center"  />

        <!-- Responsive Image Viewer -->
        <Border Grid.Row="1"
        BorderBrush="Black"
        BorderThickness="2"
        Margin="20,0,20,20"
        Padding="0"
        Name="ViewerBorder"
        SizeChanged="ViewerBorder_SizeChanged"
        ClipToBounds="True">
            <!--<ScrollViewer VerticalScrollBarVisibility="Auto" PanningMode="VerticalOnly">
                <Canvas Name="ImageCanvas" Background="LightGray">
                    <Image Name="StitchedImage" Stretch="Fill" 
                MouseLeftButtonDown="StitchedImage_MouseLeftButtonDown"
                    MouseMove="StitchedImage_MouseMove"
                    MouseLeftButtonUp="StitchedImage_MouseLeftButtonUp" />
                    <Line Name="VerticalLine" Stroke="Red" StrokeThickness="2" Visibility="Collapsed" />
                    <TextBlock Name="TimeLabel" Background="Yellow" Foreground="Black" Visibility="Collapsed" />
                </Canvas>
            </ScrollViewer>-->
            <ScrollViewer VerticalScrollBarVisibility="Auto" PanningMode="VerticalOnly">
                <Grid Name="ImageCanvas" Background="LightGray">
                    <Image Name="StitchedImage" 
                       Stretch="Uniform" 
                       StretchDirection="DownOnly"
                       VerticalAlignment="Top"
                       HorizontalAlignment="Left"
                        Height="{Binding ActualHeight-100, RelativeSource={RelativeSource AncestorType=Window}}" 
                        Source="C:\temp\stitched_image.png"
                        MouseLeftButtonDown="StitchedImage_MouseButtonDown"
                        MouseLeftButtonUp="StitchedImage_MouseButtonUp"
                        MouseRightButtonUp="StitchedImage_MouseButtonUp"
                        MouseRightButtonDown="StitchedImage_MouseButtonDown"
                        MouseMove="StitchedImage_MouseMove"/>
                    <Popup Name="Popup"
                       IsOpen="False"
                       Placement="Relative"
                       PlacementTarget="{Binding ElementName=ImageCanvas}"
		               StaysOpen="False">
                        <Border BorderBrush="Black" BorderThickness="2"
				            MouseDown="Popup_MouseDown">
                            <Grid>
                                <Image Name="FrameImage" Width="100" Height="100"/>
                                <!-- Bottom-right resize handle -->
                                <Thumb Width="10" Height="10"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Bottom"
                                Background="Gray"
                                DragDelta="ResizeThumb_DragDelta"/>
                            </Grid>
                        </Border>
                    </Popup>

                    <Line Name="VerticalLine" Stroke="Red" StrokeThickness="2" Visibility="Collapsed" />
                    <Line Name="StartVerticalLine" Stroke="{Binding SelectedColorName}" StrokeThickness="2" Visibility="Collapsed" />
                    <TextBlock Name="TimeLabel"   Foreground="White" Visibility="Collapsed" />
                </Grid>
            </ScrollViewer>
        </Border>
    </Grid>
</Window>